# Generated by Django 5.2.1 on 2025-07-08 14:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the exercise.', max_length=100)),
                ('description', models.TextField(blank=True, default='', help_text='Provide an optional description for this exercise.')),
                ('instruction_link', models.URLField(blank=True, help_text='Provide a URL to instructions or a demonstration video.', null=True)),
                ('slug', models.SlugField(help_text='Unique URL-friendly identifier for this exercise.', unique=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', related_query_name='exercise', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Exercise',
                'verbose_name_plural': 'Exercises',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DailyExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repetitions', models.PositiveSmallIntegerField(help_text='Number of repetitions for this exercise.')),
                ('work_weight', models.DecimalField(blank=True, decimal_places=2, help_text='Planned weight to be used for this exercise.', max_digits=3, null=True)),
                ('actual_used_weight', models.DecimalField(blank=True, decimal_places=2, help_text='Actual weight used during the exercise.', max_digits=3, null=True)),
                ('order', models.PositiveSmallIntegerField(help_text='Specify the sequence order of this exercise within the day.')),
                ('exercise', models.ForeignKey(help_text='Select the exercise for this daily entry.', on_delete=django.db.models.deletion.CASCADE, related_name='daily_exercises', related_query_name='daily_exercise', to='workouts.exercise')),
            ],
            options={
                'verbose_name': 'DailyExercise',
                'verbose_name_plural': 'DailyExercises',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ExerciseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for this exercise category.', max_length=100)),
                ('description', models.TextField(blank=True, default='', help_text='Provide an optional description for this category.')),
                ('slug', models.SlugField(help_text='Unique URL-friendly identifier for this category.', unique=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_categories', related_query_name='exercise_category', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ExerciseCategory',
                'verbose_name_plural': 'ExerciseCategories',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='exercise',
            name='exercise_category',
            field=models.ForeignKey(help_text='Select the category this exercise belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='exercises', related_query_name='exercise', to='workouts.exercisecategory'),
        ),
        migrations.CreateModel(
            name='TrainingDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='', help_text='Provide a description for this training day.')),
                ('order', models.PositiveSmallIntegerField(help_text='Specify the sequence order of this training day.')),
                ('slug', models.SlugField(help_text='Unique URL-friendly identifier for this training day.', unique=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_days', related_query_name='training_day', to=settings.AUTH_USER_MODEL)),
                ('tasks', models.ManyToManyField(help_text='Exercises scheduled for this training day.', related_name='training_days', related_query_name='training_day', through='workouts.DailyExercise', to='workouts.exercise')),
            ],
            options={
                'verbose_name': 'TrainingDay',
                'verbose_name_plural': 'TrainingDays',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='dailyexercise',
            name='day',
            field=models.ForeignKey(help_text='Select the training day this exercise is scheduled for.', on_delete=django.db.models.deletion.CASCADE, related_name='daily_exercises', related_query_name='daily_exercise', to='workouts.trainingday'),
        ),
        migrations.CreateModel(
            name='TrainingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for the training plan.', max_length=100)),
                ('description', models.TextField(blank=True, default='', help_text='Provide an optional description for this training plan.')),
                ('access_status', models.CharField(choices=[('PRIVATE', 'Private'), ('PROTECTED', 'Protected'), ('PUBLIC', 'Public')], default='PUBLIC', help_text='Set the access level for this training plan.', max_length=20)),
                ('slug', models.SlugField(help_text='Unique URL-friendly identifier for this training plan.', unique=True)),
                ('owner', models.ForeignKey(help_text='Select the user who owns this training plan.', on_delete=django.db.models.deletion.CASCADE, related_name='training_plans', related_query_name='training_plan', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'TrainingPlan',
                'verbose_name_plural': 'TrainingPlans',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='trainingday',
            name='training_plan',
            field=models.ForeignKey(help_text='Select the training plan this day is part of.', on_delete=django.db.models.deletion.CASCADE, related_name='training_days', related_query_name='training_day', to='workouts.trainingplan'),
        ),
        migrations.AddConstraint(
            model_name='exercise',
            constraint=models.UniqueConstraint(fields=('name', 'exercise_category', 'instruction_link'), name='unique_for_category'),
        ),
        migrations.AddConstraint(
            model_name='trainingplan',
            constraint=models.UniqueConstraint(fields=('name', 'owner'), name='unique_plan_name_for_owner'),
        ),
        migrations.AddConstraint(
            model_name='trainingday',
            constraint=models.UniqueConstraint(fields=('training_plan', 'order'), name='unique_for_training_plan'),
        ),
    ]
